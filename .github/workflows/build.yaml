name: Build Executables

on:
  push:
    branches:
      - main

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: pip install cx-freeze requests
      - name: Build Windows Executable
        run: python config/setup_windows.py build
      - name: Rename Windows Executable
        run: |
          mkdir -p dist
          mv build/exe.win64-*/Embracedata-Downloader.exe dist/Embracedata-Downloader-x64.exe
      - name: Upload Windows Executable to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Embracedata-Downloader-x64.exe
          path: dist/Embracedata-Downloader-x64.exe

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: |
          pip install cx-freeze requests
          wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
          chmod +x linuxdeploy-x86_64.AppImage
          sudo apt-get install -y libfuse2
      - name: Build Linux Executable
        run: python config/setup_linux.py build
      - name: Extract AppImage
        run: |
          mkdir -p AppDir
          ./linuxdeploy-x86_64.AppImage --appimage-extract
          cp -r squashfs-root/* AppDir/
      - name: Create AppImage
        run: ./linuxdeploy-x86_64.AppImage --appdir AppDir --output appimage --executable build/linux/Embracedata-Downloader
      - name: Rename Linux AppImage
        run: |
          mkdir -p dist
          mv Embracedata-Downloader.AppImage dist/Embracedata-Downloader-x64.AppImage
      - name: Upload Linux AppImage to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Embracedata-Downloader-x64.AppImage
          path: dist/Embracedata-Downloader-x64.AppImage

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: pip install cx-freeze requests
      - name: Build macOS Executable
        run: |
          python config/setup_macos.py build
          ls -R build  # Para verificar a estrutura e localizar o .app gerado
      - name: Rename macOS Executable
        run: |
          mkdir -p dist
          mv build/Embracedata-Downloader.app dist/Embracedata-Downloader.app
      - name: Upload macOS Executable to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Embracedata-Downloader.app
          path: dist/Embracedata-Downloader.app

  release:
    runs-on: ubuntu-latest
    needs: [build-windows, build-linux, build-macos]
    steps:
      - uses: actions/checkout@v2
      - name: Get version
        id: get_version
        run: |
          VERSION=$(python -c "import toml; print(toml.load('pyproject.toml')['tool']['poetry']['version'])")
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
      - name: Generate Changelog
        run: |
          changelog=$(git log --pretty=format:"* %s" --no-merges)
          echo "$changelog" > CHANGELOG.md
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          release_name: "Release ${{ env.VERSION }}"
          body: |
            ## Changelog
            ${{ steps.get_changelog.outputs.changelog }}

            ### Download
            - [Windows x64](./Embracedata-Downloader-x64.exe)
            - [Linux x64 AppImage](./Embracedata-Downloader-x64.AppImage)
            - [macOS](./Embracedata-Downloader.app)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
