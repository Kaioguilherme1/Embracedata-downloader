name: Build Executables

on:
  push:
    branches:
      - main

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: pip install cx-freeze requests
      - name: Build Windows Executable
        run: python config/setup_windows.py build
      - name: Upload Windows Executable to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Embracedata-Downloader-win64.exe
          path: build/Embracedata-Downloader-win64.exe

#  build-linux:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up Python
#        uses: actions/setup-python@v2
#        with:
#          python-version: "3.12"
#      - name: Install dependencies
#        run: |
#          pip install cx-freeze requests
#          wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
#          chmod +x linuxdeploy-x86_64.AppImage
#          sudo apt-get install -y libfuse2
#      - name: Build Linux Executable
#        run: python config/setup_linux.py build
#      - name: Create AppImage
#        run: |
#          mkdir -p dist
#          ./linuxdeploy-x86_64.AppImage --appdir AppDir --output appimage --executable build/linux/Embracedata-Downloader
#          mv Embracedata-Downloader-x64.AppImage dist/
#      - name: Upload Linux AppImage to Artifacts
#        uses: actions/upload-artifact@v3
#        with:
#          name: Embracedata-Downloader-x64.AppImage
#          path: build/Embracedata-Downloader-x64.AppImage

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: pip install cx-freeze requests
      - name: Build macOS Executable
        run: python config/setup_macos.py build
      - name: Upload macOS Executable to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Embracedata-Downloader
          path: build/Embracedata-Downloader

  release:
    runs-on: ubuntu-latest
    needs: [ build-windows, build-macos ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install toml
      - name: Get version
        id: get_version
        run: |
          VERSION=$(python -c "import toml; print(toml.load('pyproject.toml')['tool']['poetry']['version'])")
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
      - name: Generate Changelog
        id: changelog
        run: |
          changelog=$(git log -1 --pretty=format:"* %s" --no-merges)
          echo "changelog=${changelog}" >> $GITHUB_ENV
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          release_name: "Release ${{ env.VERSION }}"
          body: |
            ## Changelog
            
            
            ### Download
            - [Windows x64](./build/Embracedata-Downloader-win64.exe)
            - [macOS](./build/Embracedata-Downloader)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}