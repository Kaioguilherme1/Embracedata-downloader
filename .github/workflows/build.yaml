name: PyInstaller Build and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'  # Altere para a versÃ£o de Python desejada

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller requests toml

      - name: Extract version from pyproject.toml
        id: extract_version
        run: |
          VERSION=$(python -c "import toml; print(toml.load('pyproject.toml')['tool']['poetry']['version'])")
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build with PyInstaller (no-console)
        run: |
          pyinstaller --onefile --noconsole embracedata_downloader.py
        shell: bash

      - name: Upload Artifact (Binary)
        uses: actions/upload-artifact@v3
        with:
          name: embracedata_downloader-${{ matrix.os }}
          path: dist/embracedata_downloader*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: embracedata_downloader-ubuntu-latest
          path: ./artifacts/linux
      - uses: actions/download-artifact@v3
        with:
          name: embracedata_downloader-macos-latest
          path: ./artifacts/macos
      - uses: actions/download-artifact@v3
        with:
          name: embracedata_downloader-windows-latest
          path: ./artifacts/windows

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release v${{ env.VERSION }}
          draft: false
          prerelease: false

      - name: Upload Release Assets (Linux)
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/linux/embracedata_downloader
          asset_name: embracedata_downloader-linux
          asset_content_type: application/octet-stream

      - name: Upload Release Assets (macOS)
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/macos/embracedata_downloader
          asset_name: embracedata_downloader-macos
          asset_content_type: application/octet-stream

      - name: Upload Release Assets (Windows)
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/windows/embracedata_downloader.exe
          asset_name: embracedata_downloader-windows.exe
          asset_content_type: application/octet-stream
